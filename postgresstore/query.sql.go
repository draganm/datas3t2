// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package postgresstore

import (
	"context"
)

const allAccessConfigs = `-- name: AllAccessConfigs :many
SELECT DISTINCT name FROM s3_buckets
`

func (q *Queries) AllAccessConfigs(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, allAccessConfigs)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var name string
		if err := rows.Scan(&name); err != nil {
			return nil, err
		}
		items = append(items, name)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const datasetExists = `-- name: DatasetExists :one
SELECT count(*) > 0 FROM datasets
`

func (q *Queries) DatasetExists(ctx context.Context) (bool, error) {
	row := q.db.QueryRowContext(ctx, datasetExists)
	var column_1 bool
	err := row.Scan(&column_1)
	return column_1, err
}
