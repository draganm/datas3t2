CREATE TABLE IF NOT EXISTS S3_BUCKETS (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    endpoint VARCHAR(1024) NOT NULL,
    bucket VARCHAR(1024) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT unique_endpoint_bucket UNIQUE (endpoint, bucket)
);

CREATE TABLE IF NOT EXISTS datasets (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name TEXT NOT NULL UNIQUE,
    s3_bucket_id BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (s3_bucket_id) REFERENCES S3_BUCKETS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS dataranges (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    dataset_id BIGINT NOT NULL,
    object_key VARCHAR(1024) NOT NULL,
    min_datapoint_key BIGINT NOT NULL,
    max_datapoint_key BIGINT NOT NULL,
    size_bytes BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (dataset_id) REFERENCES datasets(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS keys_to_delete (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    object_key VARCHAR(1024) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    delete_after TIMESTAMP NOT NULL
);

CREATE INDEX IF NOT EXISTS idx_keys_to_delete_delete_at ON keys_to_delete(delete_at);
CREATE INDEX IF NOT EXISTS idx_dataranges_dataset_name ON dataranges(dataset_name);
CREATE INDEX IF NOT EXISTS idx_dataranges_key_range ON dataranges(min_datapoint_key, max_datapoint_key);
