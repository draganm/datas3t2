CREATE TABLE IF NOT EXISTS S3_BUCKETS (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(1024) NOT NULL UNIQUE,
    endpoint VARCHAR(1024) NOT NULL,
    bucket VARCHAR(1024) NOT NULL,
    access_key VARCHAR(2048) NOT NULL,
    secret_key VARCHAR(2048) NOT NULL,
    use_tls BOOLEAN NOT NULL DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (endpoint, bucket)
);

CREATE TABLE IF NOT EXISTS datasets (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL UNIQUE,
    s3_bucket_id BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (s3_bucket_id) REFERENCES S3_BUCKETS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS dataranges (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    dataset_id BIGINT NOT NULL,
    data_object_key VARCHAR(1024) NOT NULL,
    index_object_key VARCHAR(1024) NOT NULL,
    min_datapoint_key BIGINT NOT NULL,
    max_datapoint_key BIGINT NOT NULL,
    size_bytes BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (dataset_id) REFERENCES datasets(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS datarange_uploads (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    datarange_id BIGINT NOT NULL,
    upload_id VARCHAR(1024) NOT NULL,
    data_object_key VARCHAR(1024) NOT NULL,
    index_object_key VARCHAR(1024) NOT NULL,
    first_datapoint_index BIGINT NOT NULL,
    number_of_datapoints BIGINT NOT NULL,
    data_size BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (datarange_id) REFERENCES dataranges(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS keys_to_delete (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    presigned_delete_url VARCHAR(8192) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    delete_after TIMESTAMP NOT NULL
);

CREATE INDEX IF NOT EXISTS idx_keys_to_delete_delete_after ON keys_to_delete(delete_after);
CREATE INDEX IF NOT EXISTS idx_dataranges_dataset_id ON dataranges(dataset_id);
CREATE INDEX IF NOT EXISTS idx_dataranges_key_range ON dataranges(min_datapoint_key, max_datapoint_key);
